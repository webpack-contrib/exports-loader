// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`loader should throw an error without options: errors 1`] = `
Array [
  "ModuleBuildError: Module build failed (from \`replaced original path\`):
ValidationError: Invalid options object. Exports Loader has been initialized using an options object that does not match the API schema.",
]
`;

exports[`loader should throw an error without options: warnings 1`] = `Array []`;

exports[`loader should work for multiple CommonJS exports with "exports": errors 1`] = `Array []`;

exports[`loader should work for multiple CommonJS exports with "exports": module 1`] = `
"const object = {
  key: 'value'
};
const otherObject = {
  otherKey: 'otherValue'
};

exports = { foo: 'bar' };


/*** EXPORTS FROM exports-loader ***/
module.exports = exports = {
  \\"object\\": (object),
  \\"otherObject\\": (otherObject),
};"
`;

exports[`loader should work for multiple CommonJS exports with "exports": result 1`] = `
Object {
  "object": Object {
    "key": "value",
  },
  "otherObject": Object {
    "otherKey": "otherValue",
  },
}
`;

exports[`loader should work for multiple CommonJS exports with "exports": warnings 1`] = `Array []`;

exports[`loader should work for multiple CommonJS exports with "module.exports": errors 1`] = `Array []`;

exports[`loader should work for multiple CommonJS exports with "module.exports": module 1`] = `
"const object = {
  key: 'value'
};
const otherObject = {
  otherKey: 'otherValue'
};

module.exports = { foo: 'bar' };


/*** EXPORTS FROM exports-loader ***/
module.exports = exports = {
  \\"object\\": (object),
  \\"otherObject\\": (otherObject),
};"
`;

exports[`loader should work for multiple CommonJS exports with "module.exports": result 1`] = `
Object {
  "object": Object {
    "key": "value",
  },
  "otherObject": Object {
    "otherKey": "otherValue",
  },
}
`;

exports[`loader should work for multiple CommonJS exports with "module.exports": warnings 1`] = `Array []`;

exports[`loader should work for single CommonJS export with "exports": errors 1`] = `Array []`;

exports[`loader should work for single CommonJS export with "exports": module 1`] = `
"const object = {
  key: 'value'
};
const otherObject = {
  otherKey: 'otherValue'
};

exports = { foo: 'bar' };


/*** EXPORTS FROM exports-loader ***/
module.exports = exports = {
  \\"object\\": (object),
};"
`;

exports[`loader should work for single CommonJS export with "exports": result 1`] = `
Object {
  "object": Object {
    "key": "value",
  },
}
`;

exports[`loader should work for single CommonJS export with "exports": warnings 1`] = `Array []`;

exports[`loader should work for single CommonJS export with "module.exports": errors 1`] = `Array []`;

exports[`loader should work for single CommonJS export with "module.exports": module 1`] = `
"const object = {
  key: 'value'
};
const otherObject = {
  otherKey: 'otherValue'
};

module.exports = { foo: 'bar' };


/*** EXPORTS FROM exports-loader ***/
module.exports = exports = {
  \\"object\\": (object),
};"
`;

exports[`loader should work for single CommonJS export with "module.exports": result 1`] = `
Object {
  "object": Object {
    "key": "value",
  },
}
`;

exports[`loader should work for single CommonJS export with "module.exports": warnings 1`] = `Array []`;

exports[`loader should work with inline syntax: errors 1`] = `Array []`;

exports[`loader should work with inline syntax: module 1`] = `
"module.exports = require('../../src/cjs.js?CV!./exports/cv.js');
"
`;

exports[`loader should work with inline syntax: result 1`] = `
Object {
  "CV": Object {
    "Image": [Function],
    "stackBoxBlurMult": Array [
      1,
      171,
      205,
      293,
      57,
      373,
      79,
      137,
      241,
      27,
      391,
      357,
      41,
      19,
      283,
      265,
    ],
  },
}
`;

exports[`loader should work with inline syntax: warnings 1`] = `Array []`;

exports[`loader should work with source maps: errors 1`] = `Array []`;

exports[`loader should work with source maps: module 1`] = `
"var CV = CV || {};

CV.Image = function(width, height, data){
  this.width = width || 0;
  this.height = height || 0;
  this.data = data || [];
};

CV.stackBoxBlurMult =
  [1, 171, 205, 293, 57, 373, 79, 137, 241, 27, 391, 357, 41, 19, 283, 265];


/*** EXPORTS FROM exports-loader ***/
module.exports = exports = {
  \\"CV\\": (CV),
};"
`;

exports[`loader should work with source maps: result 1`] = `Object {}`;

exports[`loader should work with source maps: warnings 1`] = `Array []`;

exports[`loader should work: errors 1`] = `Array []`;

exports[`loader should work: module 1`] = `
"var CV = CV || {};

CV.Image = function(width, height, data){
  this.width = width || 0;
  this.height = height || 0;
  this.data = data || [];
};

CV.stackBoxBlurMult =
  [1, 171, 205, 293, 57, 373, 79, 137, 241, 27, 391, 357, 41, 19, 283, 265];


/*** EXPORTS FROM exports-loader ***/
module.exports = exports = {
  \\"CV\\": (CV),
};"
`;

exports[`loader should work: result 1`] = `
Object {
  "CV": Object {
    "Image": [Function],
    "stackBoxBlurMult": Array [
      1,
      171,
      205,
      293,
      57,
      373,
      79,
      137,
      241,
      27,
      391,
      357,
      41,
      19,
      283,
      265,
    ],
  },
}
`;

exports[`loader should work: warnings 1`] = `Array []`;
