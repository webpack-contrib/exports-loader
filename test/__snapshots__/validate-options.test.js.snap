// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`validate options should throw an error on the "exports" option with "() => {}" value 1`] = `
"Invalid options object. Exports Loader has been initialized using an options object that does not match the API schema.
 - options.exports should be one of these:
   non-empty string | non-empty string | object { name, syntax?, alias? } | [non-empty string | object { name, syntax?, alias? }, ...] (should not have fewer than 1 item)
   Details:
    * options.exports should be a non-empty string.
    * options.exports should be one of these:
      non-empty string | object { name, syntax?, alias? }
      Details:
       * options.exports should be a non-empty string.
       * options.exports should be an object:
         object { name, syntax?, alias? }
    * options.exports should be an array:
      [non-empty string | object { name, syntax?, alias? }, ...] (should not have fewer than 1 item)"
`;

exports[`validate options should throw an error on the "exports" option with "[1,2,3]" value 1`] = `
"Invalid options object. Exports Loader has been initialized using an options object that does not match the API schema.
 - options.exports should be one of these:
   non-empty string | non-empty string | object { name, syntax?, alias? } | [non-empty string | object { name, syntax?, alias? }, ...] (should not have fewer than 1 item)
   Details:
    * options.exports[2] should be one of these:
      non-empty string | object { name, syntax?, alias? }
      Details:
       * options.exports[1] should be one of these:
         non-empty string | object { name, syntax?, alias? }
         Details:
          * options.exports[0] should be one of these:
            non-empty string | object { name, syntax?, alias? }
            Details:
             * options.exports[0] should be a non-empty string.
             * options.exports[0] should be an object:
               object { name, syntax?, alias? }
          * options.exports[1] should be a non-empty string.
          * options.exports[1] should be an object:
            object { name, syntax?, alias? }
       * options.exports[2] should be a non-empty string.
       * options.exports[2] should be an object:
         object { name, syntax?, alias? }"
`;

exports[`validate options should throw an error on the "exports" option with "{"alias":"FooA"}" value 1`] = `
"Invalid options object. Exports Loader has been initialized using an options object that does not match the API schema.
 - options.exports misses the property 'name'. Should be:
   non-empty string"
`;

exports[`validate options should throw an error on the "exports" option with "{"name":""}" value 1`] = `
"Invalid options object. Exports Loader has been initialized using an options object that does not match the API schema.
 - options.exports.name should be an non-empty string."
`;

exports[`validate options should throw an error on the "exports" option with "{"name":"Foo","alias":""}" value 1`] = `
"Invalid options object. Exports Loader has been initialized using an options object that does not match the API schema.
 - options.exports.alias should be an non-empty string."
`;

exports[`validate options should throw an error on the "exports" option with "{"syntax":"default"}" value 1`] = `
"Invalid options object. Exports Loader has been initialized using an options object that does not match the API schema.
 - options.exports misses the property 'name'. Should be:
   non-empty string"
`;

exports[`validate options should throw an error on the "exports" option with "{"syntax":"foo","name":"Foo"}" value 1`] = `
"Invalid options object. Exports Loader has been initialized using an options object that does not match the API schema.
 - options.exports.syntax should be one of these:
   \\"default\\" | \\"named\\" | \\"single\\" | \\"multiple\\""
`;

exports[`validate options should throw an error on the "exports" option with "true" value 1`] = `
"Invalid options object. Exports Loader has been initialized using an options object that does not match the API schema.
 - options.exports should be one of these:
   non-empty string | non-empty string | object { name, syntax?, alias? } | [non-empty string | object { name, syntax?, alias? }, ...] (should not have fewer than 1 item)
   Details:
    * options.exports should be a non-empty string.
    * options.exports should be one of these:
      non-empty string | object { name, syntax?, alias? }
      Details:
       * options.exports should be a non-empty string.
       * options.exports should be an object:
         object { name, syntax?, alias? }
    * options.exports should be an array:
      [non-empty string | object { name, syntax?, alias? }, ...] (should not have fewer than 1 item)"
`;

exports[`validate options should throw an error on the "type" option with "false" value 1`] = `
"Invalid options object. Exports Loader has been initialized using an options object that does not match the API schema.
 - options.type should be one of these:
   \\"commonjs\\" | \\"module\\""
`;

exports[`validate options should throw an error on the "type" option with "foo" value 1`] = `
"Invalid options object. Exports Loader has been initialized using an options object that does not match the API schema.
 - options.type should be one of these:
   \\"commonjs\\" | \\"module\\""
`;

exports[`validate options should throw an error on the "type" option with "true" value 1`] = `
"Invalid options object. Exports Loader has been initialized using an options object that does not match the API schema.
 - options.type should be one of these:
   \\"commonjs\\" | \\"module\\""
`;
